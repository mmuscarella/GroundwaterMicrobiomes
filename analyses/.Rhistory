rm(list=ls())
setwd("~/GitHub/GroundwaterMicrobiomes/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan"); require("lme4"); require("reshape"); require("ggplot2")
require("vegan"); require("lme4"); require("reshape"); require("ggplot2")
require("ade4"); require("png"); require ("agricolae"); require("tidyr")
# Import Environmental Data
design <- read.csv("../data/GWQ_env.csv")
# Import OTU data
# Import Raw Data
otu.in <- read.otu("../data/GWQ.bac.final.shared")
# OTU table - remove otus w/ < 2 occurrences across all sites
otus <- otu.in[, which(colSums(otu.in) >= 1)]
dim(otus)
# Make Presence Absence Matrix
dataPA <- (otus > 0) * 1
dataREL <- otus
for(i in 1:dim(otus)[1]){
dataREL[i,] <- otus[i,]/sum(otus[i,])
}
# Import Taxonomy File
otu.tax <- read.tax(taxonomy = "../data/GWQ.bac.final.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
#PERMANOVA
new.data <-cbind(design,dataREL)
View(new.data)
View(design)
adonis = adonis(new.data[,-c(1:5)]~nitrate, method = "bray", data = new.data, perm=1000)
adonis
rda = adonis(rda[,-c(1:5)]~nitrate, method = "bray", data = new.data, perm=1000)
rda(dataREL ~ design$nitrate)
rda(dataREL ~ design$nitrate, data=design)
dim(otus)
dim(design)
rda(otus ~ design$nitrate, data=design)
rda(dataREL ~ design$nitrate, data=design, ns.rm=TRUE)
rda(dataREL ~ design$nitrate, data=design, na.rm=TRUE)
rda(dataREL ~ design$nitrate, data=design, na.action=na.exclude)
rda
rda->rda(dataREL ~ design$nitrate, data=design, na.action=na.exclude)
rda(otus ~ design$nitrate, data=design, na.action=na.exclude)
# OTU table - remove otus w/ < 2 occurrences across all sites
otus <- otu.in[, which(colSums(otu.in) >= 2)]
dim(otus)
dataREL <- otus
for(i in 1:dim(otus)[1]){
dataREL[i,] <- otus[i,]/sum(otus[i,])
}
rda(dataREL ~ design$nitrate, data=design, na.action=na.exclude)
rda(dataREL ~ nitrate, data=design, na.action=na.exclude)
rda = adonis(rda[,-c(1:5)]~nitrate, method = "bray", data = new.data, perm=1000)
rda(dataREL ~ nitrate, data=design, na.action=na.exclude)
rda(dataREL ~ nitrate, data=design, na=na.omit)
View(dataREL)
otus.sub <- otus[(1:10),(1:10)]
design.sub <-[(1:10,)]
design.sub <-[(1:10),]
design.sub <- design[(1:10),]
dim(design.sub)
dim(otus.sub)
dataREL.sub <- <- otus.sub
dataREL.sub <- otus.sub
for(i in 1:dim(otus.sub)[1]){
dataREL[i,] <- otus.sub[i,]/sum(otus.sub[i,])
}
dataREL.sub <- otus.sub
for(i in 1:dim(otus.sub)[1]){
dataREL.sub[i,] <- otus.sub[i,]/sum(otus.sub[i,])
}
rda(dataREL.sub ~ nitrate, data=design.sub, na=na.omit)
View(design.sub)
View(dataREL.sub)
new.data <-cbind(design.sub,dataREL.sub)
adonis = adonis(new.data[,-c(1:5)]~nit, method = "ratebray", data = new.data, perm=1000)
adonis = adonis(new.data[,-c(1:5)]~nitrate, method = "ratebray", data = new.data, perm=1000)
adonis = adonis(new.data[,-c(1:5)]~nitrate, method = "bray", data = new.data, perm=1000)
adonis
rda(dataREL.sub ~ nitrate, data=design.sub)
rda(otus.sub ~ nitrate, data=design.sub)
m <- rda(decostand(otus.sub, "hell") ~  nitrate, data=design.sub)
RsquareAdj(m)
rda.2 <- rda(decostand(otus, "hell") ~  nitrate, data=design)
rda.2 <- rda(decostand(otus, "hell") ~  nitrate, data=design, na=na.omit)
RsquareAdj(rda.1)
RsquareAdj(rda.2)
rda.2 <- rda(decostand(otus, "hell") ~  nitrate+date, data=design, na=na.omit)
rda.2 <- rda(decostand(otus, "hell") ~  nitrate+Date, data=design, na=na.omit)
RsquareAdj(rda.2)
# Principal Coordinates Analysis
dataREL.dist <- vegdist(dataREL, method="bray")
pcoa <- cmdscale(dataREL.dist, k=3, eig=TRUE, add=FALSE)
explainvar1b <- round(pcoa$eig[1] / sum(pcoa$eig), 3) * 100
explainvar2b <- round(pcoa$eig[2] / sum(pcoa$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #26.6
explainvar2b #18.1
# Principal Coordinates Analysis - bulk and teas
#new.data <-cbind(design_final,dataREL)
pcoa.groups <- paste(new.data$Date, new.data$Date, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# Principal Coordinates Analysis - bulk and teas
#new.data <-cbind(design_final,dataREL)
pcoa.groups <- paste(new.data$Date, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# RDA
new.data <-cbind(design,dataREL)
pcoa.groups <- paste(new.data$Date, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
?acast
??acast
library(reshape2)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts$Date <- as.factor(Date)
pcoa.cent.dataframe.trts <- as.data.frame(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts$Date <- as.factor(Date)
#Plot
df1a <- as.data.frame(pcoa.cent.dataframe.trts)
#Plot
df1a <- as.data.frame(pcoa.cent.dataframe.trts)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=Date, shape = Date)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(colour=trt), size=5, stroke = 1.25, show.legend = TRUE) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
scale_colour_manual(labels = c("mowed","mowed/fertilized"),
values = c("gray70", "darkgreen")) +
scale_shape_manual(labels = c("(wet_0ditch)","(dry_1ditch)"), values = c(15,22)) +
theme(axis.title = element_text(size=14),
axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (26.6%)") + ylab("PCoA 2 (18.1%)") +
labs(colour = "Treatment", shape = "Ditch") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)),
shape = guide_legend(override.aes = list(size = 4))) +
ggtitle("Bacterial Community Composition (2018)")
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(colour=Date), size=5, stroke = 1.25, show.legend = TRUE) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
theme(axis.title = element_text(size=14),
axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (26.6%)") + ylab("PCoA 2 (18.1%)") +
labs(colour = "Treatment", shape = "Ditch") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)),
shape = guide_legend(override.aes = list(size = 4))) +
ggtitle("Bacterial Community Composition (2018)")
View(pcoa.cent.dataframe.trts)
View(pcoa.cent.dataframe)
View(pcoa.cent.dataframe.trts)
View(pcoa.centroids)
pcoa.cent.dataframe.trts$Date <- as.factor(Date)
pcoa.centroids
Date <- c("12/6/18","12/8/18","3/23/19","3/30/19","4/6/19","8/11/19","8/12/19","9/14/19","9/15/19","9/2/19","9/22/19","9/30/19","NA")
pcoa.cent.dataframe.trts$Date <- as.factor(Date)
dim(pcoa.cent.dataframe)
str(design)
Date <- c("V1","12/6/18","12/8/18","3/23/19","3/30/19","4/6/19","8/11/19","8/12/19","9/14/19","9/15/19","9/2/19","9/22/19","9/30/19","NA")
pcoa.cent.dataframe.trts$Date <- as.factor(Date)
#Plot
df1a <- as.data.frame(pcoa.cent.dataframe.trts)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=Date, shape = Date)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(colour=Date), size=5, stroke = 1.25, show.legend = TRUE) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
theme(axis.title = element_text(size=14),
axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (26.6%)") + ylab("PCoA 2 (18.1%)") +
labs(colour = "Treatment", shape = "Ditch") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)),
shape = guide_legend(override.aes = list(size = 4)))
ggsave("../figures/2018.bact.ordination.bulk.jpg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=7, height=5, dpi=300, limitsize=TRUE)
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(colour=Date), size=5, stroke = 1.25, show.legend = TRUE) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
theme(axis.title = element_text(size=14),
axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (26.6%)") + ylab("PCoA 2 (18.1%)") +
labs(colour = "Treatment", shape = "Ditch") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)))
ggsave("../figures/2018.bact.ordination.bulk.jpg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=7, height=5, dpi=300, limitsize=TRUE)
ggsave("../figures/2018.bact.ordination.bulk.jpg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=7, height=7, dpi=300, limitsize=TRUE)
#Plot
df1a <- as.data.frame(pcoa.cent.dataframe.trts)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=Date)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(colour=Date), size=5, stroke = 1.25, show.legend = TRUE) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
theme(axis.title = element_text(size=14),
axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (4.8%)") + ylab("PCoA 2 (4.7%)") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)))
ggsave("../figures/2018.bact.ordination.bulk.jpg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=10, height=7, dpi=300, limitsize=TRUE)
ggsave("../figures/gwq_microbes.jpg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=10, height=7, dpi=300, limitsize=TRUE)
rm(list=ls())
setwd("~/GitHub/GroundwaterMicrobiomes/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan"); require("lme4"); require("reshape"); require("ggplot2")
require("ade4"); require("png"); require ("agricolae"); require("tidyr")
require("dplyr"); require("reshape2"); require("picante"); require("phyloseq")
# Import Environmental Data
design <- read.csv("../data/GWQ_env.csv")
# Import OTU data
# Import Raw Data
otu.in <- read.otu("../data/GWQ.bac.final.shared")
# OTU table - remove otus w/ < 2 occurrences across all sites
otus <- otu.in[, which(colSums(otu.in) >= 2)]
dim(otus)
# Make Presence Absence Matrix
dataPA <- (otus > 0) * 1
dataREL <- otus
for(i in 1:dim(otus)[1]){
dataREL[i,] <- otus[i,]/sum(otus[i,])
}
# Import Taxonomy File
otu.tax <- read.tax(taxonomy = "../data/GWQ.bac.final.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
# RDA
new.data <-cbind(design,dataREL)
View(design)
rda(dataREL ~ nitrate+Timepoint, data=design, na=na.omit)
rda.2 <- rda(decostand(otus, "hell") ~  nitrate+Timepoint, data=design, na=na.omit)
RsquareAdj(rda.2)
# Principal Coordinates Analysis
dataREL.dist <- vegdist(dataREL, method="bray")
pcoa <- cmdscale(dataREL.dist, k=3, eig=TRUE, add=FALSE)
explainvar1b <- round(pcoa$eig[1] / sum(pcoa$eig), 3) * 100
explainvar2b <- round(pcoa$eig[2] / sum(pcoa$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #4.8
explainvar2b #4.7
str(design)
Timepoint
design$Timepoint
rm(list=ls())
setwd("~/GitHub/GroundwaterMicrobiomes/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan"); require("lme4"); require("reshape"); require("ggplot2")
require("ade4"); require("png"); require ("agricolae"); require("tidyr")
require("dplyr"); require("reshape2"); require("picante"); require("phyloseq")
# Import Environmental Data
design <- read.csv("../data/GWQ_env.csv")
# Import OTU data
# Import Raw Data
otu.in <- read.otu("../data/GWQ.bac.final.shared")
# OTU table - remove otus w/ < 2 occurrences across all sites
otus <- otu.in[, which(colSums(otu.in) >= 2)]
dim(otus)
# Make Presence Absence Matrix
dataPA <- (otus > 0) * 1
dataREL <- otus
for(i in 1:dim(otus)[1]){
dataREL[i,] <- otus[i,]/sum(otus[i,])
}
# Import Taxonomy File
otu.tax <- read.tax(taxonomy = "../data/GWQ.bac.final.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
# RDA (full data - works)
new.data <-cbind(design,dataREL)
rda.2 <- rda(decostand(otus, "hell") ~  nitrate+Timepoint, data=design, na=na.omit)
RsquareAdj(rda.2)
# Principal Coordinates Analysis
dataREL.dist <- vegdist(dataREL, method="bray")
pcoa <- cmdscale(dataREL.dist, k=3, eig=TRUE, add=FALSE)
explainvar1b <- round(pcoa$eig[1] / sum(pcoa$eig), 3) * 100
explainvar2b <- round(pcoa$eig[2] / sum(pcoa$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #4.8
explainvar2b #4.7
design$Timepoint
str(design)
pcoa.groups <- paste(new.data$Date, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts <- as.data.frame(pcoa.cent.dataframe)
Date <- c("Florence_1_Dec2018","Florence_2_March2019","Florence_3_Aug2019","Florence_4_Sept2019","Practice")
pcoa.cent.dataframe.trts$Date <- as.factor(Date)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts <- as.data.frame(pcoa.cent.dataframe)
Timepoint <- c("Florence_1_Dec2018","Florence_2_March2019","Florence_3_Aug2019","Florence_4_Sept2019","Practice")
pcoa.cent.dataframe.trts$Timepoint <- as.factor(Timepoint)
pcoa.groups <- paste(new.data$Timepoint, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts <- as.data.frame(pcoa.cent.dataframe)
Timepoint <- c("Florence_1_Dec2018","Florence_2_March2019","Florence_3_Aug2019","Florence_4_Sept2019","Practice")
pcoa.cent.dataframe.trts$Timepoint <- as.factor(Timepoint)
#Plot
df1a <- as.data.frame(pcoa.cent.dataframe.trts)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=Date)) + theme_bw()
plot1a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_point(aes(colour=Date), size=5, stroke = 1.25, show.legend = TRUE) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") +
geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") +
theme(axis.title = element_text(size=14),
axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (4.8%)") + ylab("PCoA 2 (4.7%)") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)))
ggsave("../figures/gwq_microbes.jpg", plot=last_plot(), device=NULL, path=NULL, scale=1, width=10, height=7, dpi=300, limitsize=TRUE)
design.type <- new.data$Timepoint
dataREL.t <- new.data[,-c(1:6)]
library("labdsv")
#group = interaction(new.data$source, new.data$treatment, new.data$ditch)
design.type <- new.data$Timepoint
dataREL.t <- new.data[,-c(1:6)]
dataREL <- dataREL.t[, colSums(dataREL.t) > 0.05]
bac.ind <- indval(dataREL, design.type)
levels(design.type)
summary(bac.ind)
inds <- which(bac.ind$pval <= 0.05)
bac.indicators <- as.data.frame(matrix(NA, nrow = length(inds), ncol = 4))
colnames(bac.indicators) <- c("OTU", "Cluster", "IndVal", "Prob")
bac.indicators$OTU <- names(inds)
bac.indicators$Cluster <- bac.ind$maxcls[inds]
bac.indicators$IndVal <- bac.ind$indcls[inds]
bac.indicators$Prob <- bac.ind$pval[inds]
ind.tax <- otu.tax[which(as.character(otu.tax$OTU) %in% bac.indicators$OTU), ]
ind.tax <- ind.tax[match(ind.tax$OTU, bac.indicators$OTU), ]
indicator.bac <- cbind(bac.indicators, ind.tax[, -c(1)])
indicator.bac <- indicator.bac[order(as.numeric(indicator.bac$Cluster)), ]
table(indicator.bac$Cluster)
table(indicator.bac$Phylum)
table(indicator.bac$Cluster)
levels(design.type)
# Export Bacteria Indicator Table
write.table(indicator.bac, "../data/BacterialIndicators.txt",
sep="\t", row.names = F, quote = F)
